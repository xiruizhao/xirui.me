[["tools.html", "3 Tools 3.1 Git Notes 3.2 WebDav Server for Zotero Library", " 3 Tools _ 3.1 Git Notes Git version 2.28.0 3.1.1 Work In Progress 3.1.1.1 Inspect WIP git status shows the list of files with staged and unstaged changes and untracked files. git diff shows unstaged changes (worktree v index) git diff --staged show staged changes (index v HEAD) git diff @ shows unstaged and staged changes (worktree, index v HEAD). (@ is a shortcut for HEAD. See gitrevisions) &lt;pathspec&gt; add be added at the end, e.g., :/ stands for repository root. 3.1.1.2 Discard WIP git clean -f &lt;path&gt; removes untracked files git restore &lt;pathspec&gt; discards unstaged changes (working =&gt; index) alternatively, git checkout &lt;pathspec&gt; Undo git add: git restore --staged &lt;pathspec&gt; unstages staged changes (index =&gt; HEAD) or git rm --cached &lt;pathspec&gt; if a new file was added alternatively, git reset &lt;pathspec&gt;, git reset (the whole repository), git reset -p (interactively select chunks to unstage) git restore --source=HEAD --staged --worktree &lt;pathspec&gt; discards unstaged and staged changes (worktree, index =&gt; HEAD). Shorthand: git restore -s@ -SW &lt;pathspec&gt; alternatively, git checkout @ &lt;pathspec&gt; and git reset --hard (the whole repository). Note: git reset “resets current HEAD to the specified state” (and changes the worktree and the index accordingly) while git restore does not move HEAD. 3.1.1.3 Save and reapply WIP git stash stashes unstaged and staged changes (untracked files are excluded) to a stash stack git stash -u includes untracked files (excluding ignored files); git statsh -a includes even ignored files git stash -p is interactive git stash pop applies the most recent local stash (previously staged changes are restored as unstaged) and drops it from the stash stack git stash pop --index restores staged changes as staged git stash apply applies the most recent local stash but git stash drop drops the most recent local stash from the stash stack git stash list lists saved stashes git stash show n inspects n-th stash (0-th is the most recent one) git stash apply n applies the n-th stash from the stash stack git stash clear clears the stash stack 3.1.1.4 (Somewhat odd) alternative to git stash git worktree add -b hotfix ../hotfix cd ../hotfix # work on it ... git commit -m &quot;fix #xxx&quot; # change to previous worktree git reset --soft hotfix # WIP in current worktree untouched but HEAD updated git push git worktree remove ../hotfix 3.1.2 History 3.1.2.1 Inspect history git log --stat git log -p git log &lt;file&gt; 3.1.2.2 Rewrite history 3.1.2.2.1 Rewrite, undo and revert last commit git commit --amend replaces your last commit with a new commit. supply -m to change commit message or --no-edit to keep it unchanged git reset --hard @~ rolls HEAD back to the second last commit and restores the worktree and the index. git revert @ makes a new commit to revert the changes introduced in last commit. 3.1.2.2.2 Squash, split, and rewrite past commits git rebase --root -i. See Rewriting History of Pro Git. Squash all commits: git reset $(git commit-tree @^{tree} -m \"Squash all commits\") creates a new commit out of the tree object corresponding to HEAD and resets HEAD to it (source: StackOverflow). Note that some unreachable past commits are still available in your local reflog and unreachable objects are available in your local object database, which will expire by default. Reflogs and unreachable objects are not transfered by git push. 3.1.3 Working with long histories git clone --depth 1 &lt;repos&gt; git fetch origin &lt;remote_branch&gt;:&lt;local_branch&gt; git clone --depth 1 --no-single-branch &lt;repos&gt; (equivalent to 1. and git fetch --depth 1 origin 'refs/heads/*:refs/remotes/origin/*') git fetch --deepen 1 3.2 WebDav Server for Zotero Library 2021-01-21 Motivation: Zotero Library’s free space is only 300MB. Caveat: Group Library is not supported. 3.2.1 Prerequisitives VPS domain name 3.2.2 Steps Install vanilla caddy per https://caddyserver.com/docs/install#debian-ubuntu-raspbian, which contains systemd service files Install caddy compiled with webdav module. You can customize included modules at https://caddyserver.com/download. Unfortunately, this step has to be repeated whenever caddy is upgraded. curl -o /tmp/caddy &#39;https://caddyserver.com/api/download?os=linux&amp;arch=amd64&amp;p=github.com%2Fmholt%2Fcaddy-webdav&amp;idempotency=92814018723469&#39; sudo install -o root -m 755 /tmp/caddy /usr/bin/caddy Generate password for HTTP Basic Authentication caddy hash-password &gt; passwd_hash # input your passwd on stdin sudo mkdir -p /var/www/zotero Put in /etc/caddy/Caddyfile: example.com { basicauth { # username passwd_hash zotero xxxx } root /zotero/* /var/www webdav /zotero/* } Reload caddy config sudo systemctl reload caddy 3.2.3 Testing cadaver is a command-line WebDav client, suitable for testing: cadaver https://example.com/zotero/ 3.2.4 Other clients compatible with Zotero Library Papership has macOS and iOS apps that can sync with Zotero and personal WebDav servers. You should run sudo touch /var/www/zotero/lastsync.txt on the WebDav server on first use. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
